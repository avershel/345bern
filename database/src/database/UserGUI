package GutenSearch;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/*
 * UserGUI
 * Class that creates the User GUI
 *
 * @author group 7
 */
public class UserGUI
{
  Database db = new Database();
  JFrame userFrame;
  String dir = "$HOME/Desktop";



  public static void main(String[] args)
  {
    UserGUI userGUI = new UserGUI();
    userGUI.userGUI();
  }

  /*
   * creates user GUI
   *
   */
  private void userGUI()
  {
    final JFrame welcomeFrame = new JFrame("GutenSearch");
    welcomeFrame.setSize(800,800);
    welcomeFrame.setLayout(new BorderLayout());
    
    JButton settings = new JButton("Choose Directory");
    settings.addActionListener(new ActionListener(){
    	public void actionPerformed(ActionEvent e){
    		JFrame chooser = new JFrame();
    		JFileChooser fileChooser = new JFileChooser();
    		fileChooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
    		
    		int retval = fileChooser.showOpenDialog(chooser);

            if (retval == JFileChooser.APPROVE_OPTION)
            {
            	dir = fileChooser.getSelectedFile().toString();
            	JOptionPane.showMessageDialog(chooser, "Directory Selected", "Confirmation", JOptionPane.PLAIN_MESSAGE);
            	userGUIdetails();
            }
    	}});
    
    JButton search = new JButton("Search Books!");
    search.addActionListener(new ActionListener(){
    	public void actionPerformed(ActionEvent e){
    		welcomeFrame.setVisible(false);
    		userFrame.setVisible(true);
    	}});
    
    JPanel continuePanel = new JPanel(new FlowLayout());
    continuePanel.add(settings);
    continuePanel.add(search);
    welcomeFrame.add(continuePanel, BorderLayout.SOUTH);
    
    JLabel logo = new JLabel(new ImageIcon("/cs/home/stu/fowlerne/gslogo.png"));
    JPanel logoPanel = new JPanel(new BorderLayout());
    logoPanel.setBackground(Color.WHITE);
    logoPanel.add(logo, BorderLayout.CENTER);
    
    JLabel guten = new JLabel("Welcome to GutenSearch");
    guten.setFont(new Font("Sans-Serif", Font.BOLD, 20));
    JPanel gutenPanel = new JPanel(new FlowLayout());
    gutenPanel.add(guten);
    gutenPanel.setBackground(Color.WHITE);
    
    logoPanel.add(gutenPanel, BorderLayout.NORTH);
   
    logoPanel.setBackground(Color.WHITE);

    welcomeFrame.add(logoPanel, BorderLayout.CENTER);
    welcomeFrame.setVisible(true);
    
	userFrame = new JFrame("GutenSearch");
    userFrame.setSize(800,800);
    userFrame.setLayout(new BorderLayout());
    //userGUIdetails();
  }

  /*
   * creates user GUI details
   *
   */
  private void userGUIdetails()
  {
	  
	    File folder = new File(dir);
	    File[] listOfFiles = folder.listFiles();
	 
	    for (int i = 0; i < listOfFiles.length; i++) {
	      File file = listOfFiles[i];
	      if (file.isFile() ) {
	        try
	        {
	          db.addTxtFiles(file);
	        }
	        catch (FileNotFoundException e1)
	        {
	          // TODO Auto-generated catch block
	          e1.printStackTrace();
	        }
	        catch (IOException e1)
	        {
	          // TODO Auto-generated catch block
	          e1.printStackTrace();
	        }
	        //String content = FileUtils.readFileToString(file);
	        /* do somthing with content */
	      }
	    }
    JPanel searchLabelPanel = new JPanel(new FlowLayout());
    JPanel searchInputPanel = new JPanel(new FlowLayout());
    JLabel searchLabel = new JLabel("Enter Search Terms");
    JPanel searchPanel = new JPanel(new BorderLayout());

    final JTextField searchText = new JTextField(25);
    final JTextArea resultText = new JTextArea();
    resultText.setLineWrap(true);
    resultText.setEditable(false);

    searchLabelPanel.add(searchLabel);
    searchInputPanel.add(searchText);
    searchPanel.add(searchLabelPanel, BorderLayout.NORTH);
    searchPanel.add(searchInputPanel, BorderLayout.CENTER);

    JPanel resultLabelPanel = new JPanel(new FlowLayout());
    JLabel resultLabel = new JLabel("Results");
    JPanel resultPanel = new JPanel(new BorderLayout());
    JScrollPane scrollPane = new JScrollPane(resultText);

    resultLabelPanel.add(resultLabel);
    resultPanel.add(resultLabelPanel, BorderLayout.NORTH);
    resultPanel.add(scrollPane, BorderLayout.CENTER);

    searchText.addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
    	  String result = db.search(searchText.getText());
    	  
    	  if(result.equals("QUERY TERM NOT FOUND"))
    	  {
    		  resultText.setText("");
    		  JOptionPane.showMessageDialog(userFrame, result, "Error", JOptionPane.ERROR_MESSAGE);
    	  }
    	  else
    	  {
    		  resultText.setText(db.search(searchText.getText()));
    	  }
      }});

    JButton clearSearch = new JButton("Clear Search");
    clearSearch.addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        searchText.setText("");
        resultText.setText("");
      }});

    JPanel clearPanel = new JPanel(new FlowLayout());
    clearPanel.add(clearSearch);
    resultPanel.add(clearPanel, BorderLayout.SOUTH);

    JPanel textBoxPanel = new JPanel(new BorderLayout());
    textBoxPanel.add(searchPanel, BorderLayout.NORTH);
    textBoxPanel.add(resultPanel, BorderLayout.CENTER);
    userFrame.add(textBoxPanel, BorderLayout.CENTER);

  }
}
