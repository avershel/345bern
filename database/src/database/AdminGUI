package GutenSearch;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;

import javax.swing.*;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;


/*
 * AdminGUI
 * A class that creates the administrator GUI
 *
 * @author group 7
 */
public class AdminGUI
{

  ArrayList<JTextField> list = new ArrayList<JTextField>();
  Database db = new Database();
  JFrame adminFrame = new JFrame("Admin");
  String destination = "$HOME//Desktop";
  JTabbedPane tabPane = new JTabbedPane();


  /*
   * main
   */
  public static void main(String[] args)
  {
    AdminGUI gui = new AdminGUI();
    gui.adminGUI();
    
  }

  private void adminGUI()
  {
    //instantiate welcomeFrame
	final JFrame welcomeFrame = new JFrame("GutenSearch");
    welcomeFrame.setSize(800,800);
    welcomeFrame.setLayout(new BorderLayout());
    welcomeFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    //instantiate adminFrame
    adminFrame.setSize(800, 800);
    adminFrame.setLayout(new GridLayout(6, 1));
    adminFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    
    
    
    
    
    
    
    //EDIT SOURCES, should be working as of now
    JButton edit = new JButton("Edit a Text");
    edit.addActionListener(new ActionListener()
    {

    	public void actionPerformed(ActionEvent e){
    		welcomeFrame.setVisible(false);
    		adminFrame.setVisible(true);   
    		adminFrame.setTitle(("Admin: Edit Sources"));


    	    
    	    final JPanel adminButtonPanel = new JPanel();
    	 
    	    JPanel oldTitleBoxPanel = new JPanel(new FlowLayout());
    	    oldTitleBoxPanel.add(new JLabel("Old Title*: "));
    	    JTextField ottf = new JTextField(20);
    	 
    	    oldTitleBoxPanel.add(ottf);

    	    JPanel oldAuthorBoxPanel = new JPanel(new FlowLayout());
    	    oldAuthorBoxPanel.add(new JLabel("Old Author*: "));
    	    JTextField oatf = new JTextField(20);

    	    oldAuthorBoxPanel.add(oatf);

    	    JPanel newTitleBoxPanel = new JPanel(new FlowLayout());
    	    newTitleBoxPanel.add(new JLabel("New Title: "));
    	    JTextField nttf = new JTextField(20);

    	    newTitleBoxPanel.add(nttf);

    	    JPanel newAuthorBoxPanel = new JPanel(new FlowLayout());
    	    newAuthorBoxPanel.add(new JLabel("New Author: "));
    	    JTextField natf = new JTextField(20);
    	    newAuthorBoxPanel.add(natf);

    	    JButton editSource = new JButton("Apply Edits");
    	    adminButtonPanel.add(editSource);
//    	    JButton back = new JButton("Back");
//    	    adminButtonPanel.add(back);
//
//    	    back.addActionListener(new ActionListener()
//    	    {
//    	      public void actionPerformed(ActionEvent e)
//    	      {
//    	    	  adminFrame.setVisible(false);
//    	    	  adminButtonPanel.removeAll();
//
//    	    	  welcomeFrame.setVisible(true);
//    	      }
//    	    });
    	    
    	    
    	    editSource.addActionListener(new ActionListener()
    	    {
    	      public void actionPerformed(ActionEvent e)
    	      {
    	           
    	        File dir = new File(destination);
    	        File[] directoryListing = dir.listFiles();
    	        String text1 = "";
    	        if (directoryListing != null) {
    	          for (File child : directoryListing) {
    	            // Do something with child
    	        	  BufferedReader br;
					try {
						br = new BufferedReader(new FileReader(child));
	    	        	  String line = null;  
	    	        	  try {
	    	        		  System.out.println("TRYING");
							while ((line = br.readLine()) != null)  
							  {  
									//parse line for author
								//TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!	
								text1 += line + "\n";
								//System.out.println("text1 = " + text1);
								
							     
							  }
							String []split = text1.split("\n");
							System.out.println("size = " + split[0]);
							for(String lh : split)
							{
								System.out.println(lh);
								if(lh.indexOf("Title:") > 0)
								{
									System.out.println("lh = " + lh);
								}
							}
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
					} catch (FileNotFoundException e2) {
						// TODO Auto-generated catch block
						e2.printStackTrace();
					}  
 
    	          }
    	        }
    	        
    	        
    	        	//check title&author attributes and then have a Jdialog box
    	      }
    	    });

    	    list.add(ottf);
    	    list.add(nttf);
    	    list.add(oatf);
    	    list.add(natf);

    	    adminFrame.add(oldTitleBoxPanel);
    	    adminFrame.add(newTitleBoxPanel);
    	    adminFrame.add(oldAuthorBoxPanel);
    	    adminFrame.add(newAuthorBoxPanel);
    	    adminFrame.add(adminButtonPanel);

    	}});
    
    
   

    //LINK TO UserGUI SEARCH CODE
    final JButton search = new JButton("Go to GutenSearch");
    
    search.addActionListener(new ActionListener()
    {
    	public void actionPerformed(ActionEvent e){
    	     JPanel adminButtonPanel = new JPanel();

    		welcomeFrame.setVisible(false);
    		adminFrame.setTitle("Admin: Search Books");
    		adminFrame.setVisible(true);
    		adminFrame.setLayout(new BorderLayout());
  		  
    		//pas
    		
//  		  tabPane.addTab("Tab 1", resultPanel,
//  	              "Does nothing");	  	
  		  File folder = new File(destination);
  		    File[] listOfFiles = folder.listFiles();
  		 
  		    for (int i = 0; i < listOfFiles.length; i++) {
  		      File file = listOfFiles[i];
  		      if (file.isFile() ) {
  		        try
  		        {
  		          db.addTxtFiles(file);
  		        }
  		        catch (FileNotFoundException e1)
  		        {
  		          // TODO Auto-generated catch block
  		          e1.printStackTrace();
  		        }
  		        catch (IOException e1)
  		        {
  		          // TODO Auto-generated catch block
  		          e1.printStackTrace();
  		        }
  		        //String content = FileUtils.readFileToString(file);
  		        /* do somthing with content */
  		      }
  		    }
  		 
  		//panels for search section
  	    JPanel searchLabelPanel = new JPanel(new FlowLayout());
  	    JPanel searchInputPanel = new JPanel(new FlowLayout());
  	    JLabel searchLabel = new JLabel("Enter Search Terms");
  	    JPanel searchPanel = new JPanel(new BorderLayout());
  	    
  	    //text areas for search field and results
  	    final JTextField searchText = new JTextField(25);
  	    final JTextArea resultText = new JTextArea();
  	    resultText.setLineWrap(true);
  	    resultText.setEditable(false);
  	    
  	    //add details to panels
  	    searchLabelPanel.add(searchLabel);
  	    searchInputPanel.add(searchText);
  	    searchPanel.add(searchLabelPanel, BorderLayout.NORTH);
  	    searchPanel.add(searchInputPanel, BorderLayout.CENTER);
  	    
  	    //panels for result section
  	    JPanel resultLabelPanel = new JPanel(new FlowLayout());
  	    final JLabel resultLabel = new JLabel("Results");
  	    JPanel resultPanel = new JPanel(new BorderLayout());
  	    JScrollPane scrollPane = new JScrollPane(resultText);

  	    
  	    //panels for search results
  	    resultLabelPanel.add(resultLabel);
  	    resultPanel.add(resultLabelPanel, BorderLayout.NORTH);
  	    resultPanel.add(scrollPane, BorderLayout.CENTER);
  	    
  	    JPanel resultPanel2 = new JPanel(new FlowLayout());
  	    resultPanel2.add(resultLabelPanel, BorderLayout.NORTH);
  	    resultPanel2.add(scrollPane, BorderLayout.CENTER);
  	    
  	    JPanel resultPanel3 = new JPanel(new FlowLayout());
  	    resultPanel3.add(resultLabelPanel, BorderLayout.NORTH);
  	    resultPanel3.add(scrollPane, BorderLayout.CENTER);
  	    
  	    JPanel resultPanel4 = new JPanel(new FlowLayout());
  	    resultPanel4.add(resultLabelPanel, BorderLayout.NORTH);
  	    resultPanel4.add(scrollPane, BorderLayout.CENTER);
  	    
  	    resultPanel.add(resultLabelPanel, BorderLayout.NORTH);
  	    resultPanel.add(scrollPane, BorderLayout.CENTER);
  	    
  	    //add tabs
  	    tabPane.addTab("Result 1", resultPanel);	
  	    tabPane.addTab("Result 2", resultPanel2);
  	    tabPane.addTab("Result 3", resultPanel3);
  	    tabPane.addTab("Result 4", resultPanel4);
  	    
  	    //action listener for search button
  	    searchText.addActionListener(new ActionListener(){
  	      public void actionPerformed(ActionEvent e){
  	    	  long startTime = System.currentTimeMillis();
  	    	  long elapsedTime = 0L;
  	    	  String result = db.search(searchText.getText());
  	    	elapsedTime = (new Date()).getTime() - startTime;
  	    	double seconds = elapsedTime/ 1000.0;
  	    	resultLabel.setText("Results:(Searched " + Database.textcount + " Texts in "+ seconds + " Seconds)");
  	    	  if(result.equals("QUERY TERM NOT FOUND"))
  	    	  {
  	    		  resultText.setText("");
  	    		  JOptionPane.showMessageDialog(adminFrame, result, "Error", JOptionPane.ERROR_MESSAGE);
  	    	  }
  	    	  else
  	    	  {
  	    		  resultText.setText(db.search(searchText.getText()));
  	    	      int index = resultText.getText().indexOf(searchText.getText());
  	    	      int len = searchText.getText().length();
  	    	      Highlighter highlighter = resultText.getHighlighter();
  	    	      HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);
  	    	      while ( index >= 0 ) {
  	    	         try
  	    	         {
  	    	             highlighter.addHighlight(index, index+len, painter);
  	    	         }
  	    	         catch ( BadLocationException e1 )
  	    	         {
  	    	             // TODO Auto-generated catch block
  	    	             e1.printStackTrace();
  	    	         }
  	    	         index = resultText.getText().indexOf(searchText.getText(), index+len);
  	    	        }

  	    	  }
  	      }});
  	    
  	    //button for clearing the search
  	    JButton clearSearch = new JButton("Clear Search");
  	    clearSearch.addActionListener(new ActionListener(){
  	      public void actionPerformed(ActionEvent e){
  	        searchText.setText("");
  	        resultText.setText("");
  	      }});
  	    
  	    //panel for the search button
  	    JPanel clearPanel = new JPanel(new FlowLayout());
  	    clearPanel.add(clearSearch);
  	    resultPanel.add(clearPanel, BorderLayout.SOUTH);
  	    
  	    //add components to main panel
  	    JPanel textBoxPanel = new JPanel(new BorderLayout());
  	    textBoxPanel.add(searchPanel, BorderLayout.NORTH);
  	    textBoxPanel.add(tabPane, BorderLayout.CENTER);
  	    adminFrame.add(textBoxPanel, BorderLayout.CENTER);
  	    adminFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    		
    											  }
    	});
    //Upload File
    JButton upload = new JButton("Upload a Text");
    upload.addActionListener(new ActionListener()
    {


    	
	      public void actionPerformed(ActionEvent e)
	      {
	        JFrame theFile = new JFrame();
	        JFileChooser jfc = new JFileChooser();
	        int retval = jfc.showOpenDialog(theFile);

	        if (retval == JFileChooser.APPROVE_OPTION)
	        {

	          File selectedFile = jfc.getSelectedFile();
	    
	          System.out.println("File: " + selectedFile);
	          try
	          {
	        	  String str = selectedFile.toString();
	        	  String[] holder = str.split("/");
	        	  System.out.println(destination + " " + holder[holder.length-1]);
	        	  
	        	 // selectedFile.renameTo(new File("C://cs//home//stu//fowlerne//Desktop//text//" + selectedFile.getName()));
	        	  File dest = new File(destination + "/" + holder[holder.length-1]);
	        	  dest.getParentFile().mkdirs();
	        	  dest.createNewFile();
	              //Writer output = new BufferedWriter(new FileWriter(dest));
	           // db.addTxtFiles(selectedFile);
	        	  InputStream input = null;
	        	  
	        	  	    OutputStream output = null;
	        	  
	        	  	    try {
	        	  
	        	  	        input = new FileInputStream(selectedFile);
	        	  
	        	  	        output = new FileOutputStream(dest);
	        	  
	        	  	        byte[] buf = new byte[1024];
	        	  
	        	  	        int bytesRead;
	        	  
	        	  	        while ((bytesRead = input.read(buf)) > 0) {
	        	  
	        	  	            output.write(buf, 0, bytesRead);
	        	  
	        	  	        }
	        	  
	        	  	    } finally {
	        	  
	        	  	        input.close();
	        	  
	        	  	        output.close();
	        	  
	        	  	    }
	          }
	          catch (IOException e1)
	          {
	            e1.printStackTrace();
	          }
	        }
	        ;
	       
	      }
    	
    	
    	
    	
    });
    
    
    JButton settings = new JButton("Choose Directory");
    settings.addActionListener(new ActionListener(){
    	public void actionPerformed(ActionEvent e){
    		JFrame chooser = new JFrame();
    		JFileChooser fileChooser = new JFileChooser();
    		fileChooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
    		
    		int retval = fileChooser.showOpenDialog(chooser);

            if (retval == JFileChooser.APPROVE_OPTION)
            {
            	destination = fileChooser.getSelectedFile().toString();
            	JOptionPane.showMessageDialog(chooser, "Directory Selected", "Confirmation", JOptionPane.PLAIN_MESSAGE);
            	//userGUIdetails();
            }
    	}});
    
    
    
    JPanel continuePanel = new JPanel(new FlowLayout());
    continuePanel.add(settings);

    continuePanel.add(upload);
    continuePanel.add(edit);
    continuePanel.add(search);

    welcomeFrame.add(continuePanel, BorderLayout.SOUTH);
    
    
    
    //logo should be put in with the package
    JLabel logo = new JLabel(new ImageIcon("//home//student//Desktop//gslogo.png"));
    JPanel logoPanel = new JPanel(new BorderLayout());
    logoPanel.setBackground(Color.WHITE);
    logoPanel.add(logo, BorderLayout.CENTER);
    
    JLabel guten = new JLabel("Welcome to GutenSearch");
    guten.setFont(new Font("Sans-Serif", Font.BOLD, 20));
    JPanel gutenPanel = new JPanel(new FlowLayout());
    gutenPanel.add(guten);
    
    logoPanel.add(gutenPanel, BorderLayout.NORTH);
   

    welcomeFrame.add(logoPanel, BorderLayout.CENTER);
    welcomeFrame.setVisible(true);
	   
    //SET DIRECTORY
    
//    JButton setDirectoryButton = new JButton("Set Directory");
//    //adminButtonPanel.add(setDirectoryButton);
//    setDirectoryButton.addActionListener(new ActionListener()
//    {
//    	public void actionPerformed(ActionEvent e){
//    		JFrame chooser = new JFrame();
//    		JFileChooser fileChooser = new JFileChooser();
//    		fileChooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY);
//    		
//    		int retval = fileChooser.showOpenDialog(chooser);
//
//            if (retval == JFileChooser.APPROVE_OPTION)
//            {
//            	destination = fileChooser.getSelectedFile().toString();
//            	System.out.println(destination);
//            	JOptionPane.showMessageDialog(chooser, "Directory Selected", "Confirmation", JOptionPane.PLAIN_MESSAGE);
//            }
//    	}});

    
    

    
    
      
  }
  
  

}
